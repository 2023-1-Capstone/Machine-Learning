# -*- coding: utf-8 -*-
"""gas_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BGnvHy0LHbgqIe2c2oNOxrPS2vMOYHy8
"""

# Commented out IPython magic to ensure Python compatibility.
# !pip install mplfinance
# !pip install chart_studio
# !pip install scikit-learn (for google colab)
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib import dates
import mplfinance as mpf
# %matplotlib inline
import statsmodels.api as sm
import seaborn as sns
import csv

import chart_studio.plotly as py
import plotly.express as px
import plotly.graph_objects as go

import cufflinks as cf # Connects Plotly to Pandas
from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot
init_notebook_mode(connected=True)
cf.go_offline()

import requests # Get URL data
from bs4 import BeautifulSoup # Manipulate URL data
import json
from pandas import DataFrame as df
from statsmodels.tsa.ar_model import AutoReg, ar_select_order
from statsmodels.tsa.api import acf, pacf, graphics
from sklearn.metrics import mean_absolute_error, mean_squared_error

#Inha gas usage prediction for the next year (12 months)

df = pd.read_csv('sample_data/inha_gas.csv', parse_dates=True)
df.set_index('Year', inplace=True)
df = df.fillna(method='ffill')
df.isnull().values.any()
sns.set_style('darkgrid')
pd.plotting.register_matplotlib_converters()
sns.mpl.rc('figure', figsize=(12,6))
fig, ax = plt.subplots()
ax = df.plot(ax=ax)

model = AutoReg(df['Gas'], 24)
model_fit = model.fit()

train_df = df.iloc[:212]
test_df = df.iloc[212:]

train_model = AutoReg(df['Gas'], 36).fit(cov_type = 'HC0')

start=len(train_df)
end=len(train_df) + len(test_df) - 1

prediction = train_model.predict(start=start, end=end, dynamic=True)
mae = mean_absolute_error(test_df, prediction)
mse = mean_squared_error(test_df, prediction)
mse_sqrt = np.sqrt(mse)

forecast = train_model.predict(start=end+1, end=end+12, dynamic=True)
ax = forecast.plot(ax=ax)
print(forecast)

#each building gas usage predictions for (next 10 months)

def gas_prediction(df, building):
  sns.set_style('darkgrid')
  pd.plotting.register_matplotlib_converters()
  sns.mpl.rc('figure', figsize=(12,6))
  fig, ax= plt.subplots()
  #ax = df.plot(ax=ax)

  model = AutoReg(df[building], 12)
  model_fit = model.fit()

  train_df = df.iloc[:57]
  test_df = df.iloc[57:]

  train_model = AutoReg(df[building], 12).fit(cov_type = 'HC0')

  start=len(train_df)
  end=len(train_df) + len(test_df) - 1

  prediction = train_model.predict(start=start, end=end, dynamic=True)
  ax = prediction.plot(ax=ax)

  forecast = train_model.predict(start=end+1, end=end+10, dynamic=True)
  ax = forecast.plot(ax=ax)
  print("gas prediction: \n", forecast)

building_list = ['본관', '학생회관', '하이테크관', '서호관', '로스쿨관', '정석학술정보관', '5호관', '60주년기념관']

dataframe = pd.read_csv('sample_data/building_gas.csv', parse_dates=True)
dataframe.set_index('Year', inplace=True)
dataframe = df.fillna(method='ffill')

for i in building_list:
  gas_prediction(dataframe, i)