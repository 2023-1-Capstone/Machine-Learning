# -*- coding: utf-8 -*-
"""Holt_winters.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ACZDOxfVQbGLIrzn3rlmkdz4yi_yx-yT
"""

# Commented out IPython magic to ensure Python compatibility.
#!pip install mplfinance
#!pip install chart_studio
#!pip install scikit-learn
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib import dates
import mplfinance as mpf
# %matplotlib inline
import statsmodels.api as sm
import seaborn as sns

import chart_studio.plotly as py
import plotly.express as px
import plotly.graph_objects as go

import cufflinks as cf # Connects Plotly to Pandas
# Makes Plotly work in your Notebook
from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot
init_notebook_mode(connected=True)
cf.go_offline()

import requests # Get URL data
from bs4 import BeautifulSoup # Manipulate URL data
import json
from pandas import DataFrame as df
from statsmodels.tsa.holtwinters import ExponentialSmoothing
from sklearn.metrics import mean_absolute_error, mean_squared_error

df = pd.read_csv('sample_data/gas.csv')
df.set_index('Year', inplace=True)
#df.plot(figsize=(12,6))
#df.rolling(window=12).mean()['Gas'].plot()
df.info() #264 entries
df = df.dropna()
train_df = df.iloc[:212]
print(train_df)
test_df = df.iloc[212:]
print(test_df)
fit_model = ExponentialSmoothing(train_df['Gas'],
                                 trend='add',
                                 seasonal='add',
                                 seasonal_periods = 12).fit()
prediction = fit_model.forecast(51)
train_df['Gas'].plot(figsize=(12,6))
prediction.plot()
test_df['Gas'].plot()

mae = mean_absolute_error(test_df, prediction)
mse = mean_squared_error(test_df, prediction)
mse_sqrt = np.sqrt(mse)
print(mae)
print(mse_sqrt)

energy_model = ExponentialSmoothing(df['Gas'],
                                 trend='add',
                                 seasonal='add',
                                 seasonal_periods = 12).fit()
energy_predict = energy_model.forecast(48)
print(energy_predict)
df['Gas'].plot(figsize = (12,6))
energy_predict.plot()



"""[link text](https://)# New Section"""