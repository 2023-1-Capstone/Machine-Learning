# -*- coding: utf-8 -*-
"""electricity_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ACZDOxfVQbGLIrzn3rlmkdz4yi_yx-yT
"""

# Commented out IPython magic to ensure Python compatibility.
# !pip install mplfinance
# !pip install chart_studio
# !pip install scikit-learn (for google colab)

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib import dates
import mplfinance as mpf
# %matplotlib inline
import statsmodels.api as sm
import seaborn as sns

#import chart_studio.plotly as py
#import plotly.express as px
#import plotly.graph_objects as go

import cufflinks as cf # Connects Plotly to Pandas
# Makes Plotly work in your Notebook
from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot
init_notebook_mode(connected=True)
cf.go_offline()

import requests # Get URL data
from bs4 import BeautifulSoup # Manipulate URL data
import json
from pandas import DataFrame as df
from statsmodels.tsa.holtwinters import ExponentialSmoothing
from sklearn.metrics import mean_absolute_error, mean_squared_error

#each building electricity usage prediction (next 10 months)

def prediction(df, building):
  df = df.loc[:, ['building',building]]
  df.set_index('building', inplace=True)
  df.plot(figsize=(12,6))
  # df.rolling(window=12).mean()['Gas'].plot()
  df = df.dropna()
  train_df = df.iloc[:28]
  test_df = df.iloc[28:]
  fit_model = ExponentialSmoothing(train_df[building],
                                  trend='add',
                                  seasonal='add',
                                  seasonal_periods = 12).fit()
  prediction = fit_model.forecast(8)
  #train_df[building].plot(figsize=(12,6))
  #test_df[building].plot(figsize=(12,6))
  # prediction.plot()
  # mae = mean_absolute_error(test_df, prediction)
  # mse = mean_squared_error(test_df, prediction)
  # mse_sqrt = np.sqrt(mse)
  
  electricity_model = ExponentialSmoothing(df[building],
                                  trend='add',
                                  seasonal='add',
                                  seasonal_periods = 12).fit()
  electricity_predict = electricity_model.forecast(10)
  print(building + " forecast: \n", electricity_predict)
  df[building].plot(figsize = (12,6))
  electricity_predict.plot()


dataFrame = pd.read_csv('sample_data/electricity.csv')
building_list = ['본관',	'5호관',	'인하드림센터',	'6.9호관,평생교육원',	'60주년기념관',	'서호관,나빌레관',	'하이테크관',
	               '로스쿨관,학군단',	'학생회관,C호관',	'2,4호관',	'정석학술정보관']

for i in building_list:
  prediction(dataFrame, i)

"""[link text](https://)# New Section"""